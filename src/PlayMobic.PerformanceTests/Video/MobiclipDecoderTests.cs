namespace PlayMobic.PerformanceTests.Video;

using BenchmarkDotNet.Attributes;
using PlayMobic.Video;
using PlayMobic.Video.Mobiclip;

[MemoryDiagnoser]
public class MobiclipDecoderTests
{
    private static readonly byte[] FrameData = new byte[] {
        0x07, 0xAC, 0x3E, 0x38, 0xCD, 0x07, 0x7B, 0x5F, 0xFE, 0xFC, 0x3F, 0x7F,
        0xCF, 0x9F, 0xF3, 0xE7, 0xFC, 0xF9, 0x7F, 0xFE, 0x9F, 0x3F, 0xE7, 0xCF,
        0xF8, 0xF3, 0x7E, 0xFC, 0x1F, 0x3F, 0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8,
        0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7, 0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F,
        0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8, 0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7,
        0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F, 0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8,
        0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7, 0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F,
        0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8, 0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7,
        0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F, 0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8,
        0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7, 0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F,
        0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8, 0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7,
        0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F, 0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8,
        0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7, 0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F,
        0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8, 0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7,
        0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F, 0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8,
        0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7, 0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F,
        0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8, 0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7,
        0xF8, 0xF1, 0x7E, 0xFC, 0x1F, 0x3F, 0xC7, 0x8F, 0xF1, 0xE3, 0xFC, 0xF8,
        0x3F, 0x7E, 0x8F, 0x1F, 0xE3, 0xC7, 0x00, 0xF0,
    };

    private readonly Stream stream;
    private readonly MobiclipDecoder decoder;

    public MobiclipDecoderTests()
    {
        stream = new MemoryStream(FrameData);
        decoder = new MobiclipDecoder(256, 192);
    }

    [Benchmark]
    public FrameYuv420 DecodeFrame()
    {
        stream.Position = 0;
        return decoder.DecodeFrame(stream);
    }
}
